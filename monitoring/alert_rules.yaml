apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-pod-not-ready
  labels:
    app: kube-prometheus-stack
    app.kubernetes.io/instance: kube-prometheus-stack
    release: kube-prometheus-stack
spec:
  groups:
  - name: pod-health-rules
    rules:
    - alert: KubernetesPodNotHealthy
      expr: sum by (namespace, pod) (kube_pod_status_phase{phase=~"Pending|Unknown|Failed"}) > 0
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: "Kubernetes Pod not healthy"
        description: |
          Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-running state for longer than 15 minutes.
          VALUE = {{ $value }}
          LABELS = {{ $labels }}

    - alert: KubernetesDaemonsetRolloutStuck
      expr: kube_daemonset_status_number_ready / kube_daemonset_status_desired_number_scheduled * 100 < 100 or kube_daemonset_status_desired_number_scheduled - kube_daemonset_status_current_number_scheduled > 0
      for: 10m
      labels:
        severity: warning
      annotations:
        summary: "Kubernetes DaemonSet rollout stuck"
        description: |
          Some Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are not scheduled or not ready.
          VALUE = {{ $value }}
          LABELS = {{ $labels }}

    - alert: ContainerHighCpuUtilization
      expr: (sum(rate(container_cpu_usage_seconds_total{container!=""}[5m])) by (pod, container) / sum(container_spec_cpu_quota{container!=""}/container_spec_cpu_period{container!=""}) by (pod, container) * 100) > 80
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: "Container High CPU utilization"
        description: |
          Container CPU utilization is above 80%.
          VALUE = {{ $value }}
          LABELS = {{ $labels }}

    - alert: ContainerHighMemoryUsage
      expr: (sum(container_memory_working_set_bytes{name!=""}) by (instance, name) / sum(container_spec_memory_limit_bytes > 0) by (instance, name) * 100) > 80
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: "Container High Memory usage"
        description: |
          Container Memory usage is above 80%.
          VALUE = {{ $value }}
          LABELS = {{ $labels }}

    - alert: KubernetesContainerOomKiller
      expr: (kube_pod_container_status_restarts_total - kube_pod_container_status_restarts_total offset 10m >= 1) and ignoring (reason) min_over_time(kube_pod_container_status_last_terminated_reason{reason="OOMKilled"}[10m]) == 1
      for: 0m
      labels:
        severity: warning
      annotations:
        summary: "Kubernetes Container OOM killer"
        description: |
          Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} has been OOMKilled {{ $value }} times in the last 10 minutes.
          VALUE = {{ $value }}
          LABELS = {{ $labels }}

    - alert: KubernetesPodCrashLooping
      expr: increase(kube_pod_container_status_restarts_total[1m]) > 3
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: "Kubernetes Pod Crash Looping"
        description: |
          Pod {{ $labels.namespace }}/{{ $labels.pod }} is crash looping.
          VALUE = {{ $value }}
          LABELS = {{ $labels }}
